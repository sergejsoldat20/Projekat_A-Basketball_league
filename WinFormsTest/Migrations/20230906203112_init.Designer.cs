// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WinFormsTest.Data;

#nullable disable

namespace WinFormsTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230906203112_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WinFormsTest.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Sergej",
                            LastName = "Soldat",
                            Password = "admin",
                            Role = "ADMIN",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sergej",
                            LastName = "Soldat",
                            Password = "user",
                            Role = "USER",
                            Username = "user"
                        });
                });

            modelBuilder.Entity("WinFormsTest.Models.BasketballPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<string>("DressNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("BasketballPlayer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClubId = 1,
                            DressNumber = "23",
                            Name = "Player 1",
                            Position = "Guard"
                        },
                        new
                        {
                            Id = 2,
                            ClubId = 1,
                            DressNumber = "10",
                            Name = "Player 2",
                            Position = "Forward"
                        },
                        new
                        {
                            Id = 3,
                            ClubId = 2,
                            DressNumber = "7",
                            Name = "Player 3",
                            Position = "Center"
                        },
                        new
                        {
                            Id = 4,
                            ClubId = 2,
                            DressNumber = "15",
                            Name = "Player 4",
                            Position = "Guard"
                        },
                        new
                        {
                            Id = 5,
                            ClubId = 2,
                            DressNumber = "33",
                            Name = "Player 5",
                            Position = "Forward"
                        });
                });

            modelBuilder.Entity("WinFormsTest.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Club");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "City 1",
                            Name = "Club 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "City 2",
                            Name = "Club 2"
                        });
                });

            modelBuilder.Entity("WinFormsTest.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Arena")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestId")
                        .HasColumnType("integer");

                    b.Property<int>("GuestPoints")
                        .HasColumnType("integer");

                    b.Property<int>("HomeId")
                        .HasColumnType("integer");

                    b.Property<int>("HomePoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("HomeId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("WinFormsTest.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("TableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TableId")
                        .IsUnique();

                    b.ToTable("League");
                });

            modelBuilder.Entity("WinFormsTest.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Table");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Season = "2020"
                        },
                        new
                        {
                            Id = 2,
                            Season = "2020"
                        });
                });

            modelBuilder.Entity("WinFormsTest.Models.TableClub", b =>
                {
                    b.Property<int>("TableId")
                        .HasColumnType("integer");

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<int>("ClubPoints")
                        .HasColumnType("integer");

                    b.HasKey("TableId", "ClubId");

                    b.HasIndex("ClubId");

                    b.ToTable("TableClub");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            ClubId = 1,
                            ClubPoints = 56
                        },
                        new
                        {
                            TableId = 2,
                            ClubId = 1,
                            ClubPoints = 55
                        },
                        new
                        {
                            TableId = 1,
                            ClubId = 2,
                            ClubPoints = 77
                        },
                        new
                        {
                            TableId = 2,
                            ClubId = 2,
                            ClubPoints = 99
                        });
                });

            modelBuilder.Entity("WinFormsTest.Models.BasketballPlayer", b =>
                {
                    b.HasOne("WinFormsTest.Models.Club", "Club")
                        .WithMany("BasketballPlayers")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("WinFormsTest.Models.Game", b =>
                {
                    b.HasOne("WinFormsTest.Models.Club", "Guest")
                        .WithMany("GuestGames")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsTest.Models.Club", "Home")
                        .WithMany("HomeGames")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("WinFormsTest.Models.League", b =>
                {
                    b.HasOne("WinFormsTest.Models.Table", "Table")
                        .WithOne("League")
                        .HasForeignKey("WinFormsTest.Models.League", "TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("WinFormsTest.Models.TableClub", b =>
                {
                    b.HasOne("WinFormsTest.Models.Club", null)
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsTest.Models.Table", null)
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormsTest.Models.Club", b =>
                {
                    b.Navigation("BasketballPlayers");

                    b.Navigation("GuestGames");

                    b.Navigation("HomeGames");
                });

            modelBuilder.Entity("WinFormsTest.Models.Table", b =>
                {
                    b.Navigation("League")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
